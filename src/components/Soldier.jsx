/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/Soldier.glb
*/

import React, { useRef,useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useCharacterAnimations } from '../contexts/CharacterAnimations'
import { useInput } from "../hooks/useInput";

const Soldier=(props)=> {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/Soldier.glb')
  const { actions , names } = useAnimations(animations, group)
  const {setAnimations,animationIndex}=useCharacterAnimations()
  const { forward, backward, left, right, shift, pose } = useInput();

  useEffect(()=>{
    setAnimations(names)
  },[names]) 
  const currentAction = useRef("");

  useEffect(() => {
    let action = "";
    if (forward || backward || left || right) {
      action = "Walk";
      if (shift) {
        action = "Run";
      }
    } else if (pose) {
      action = "TPose";
    } else {
      action = "Idle";
    }

    if (currentAction.current != action) { 
      const nextAction = actions[action];
      const current = actions[currentAction.current];
      current?.fadeOut(0.5);
      nextAction?.reset().fadeIn(0.5).play()
currentAction.current = action;
    }
  }, [forward, backward, left, right, shift, pose]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Character" rotation={[-Math.PI / 2, 0, 3.5]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh castShadow name="vanguard_Mesh" geometry={nodes.vanguard_Mesh.geometry} material={materials.VanguardBodyMat} skeleton={nodes.vanguard_Mesh.skeleton} />
          <skinnedMesh castShadow name="vanguard_visor" geometry={nodes.vanguard_visor.geometry} material={materials.Vanguard_VisorMat} skeleton={nodes.vanguard_visor.skeleton} />
        </group>
      </group>
    </group>
  )
}
export default Soldier;
useGLTF.preload('./models/Soldier.glb')
